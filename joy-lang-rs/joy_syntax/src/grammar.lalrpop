// https://lalrpop.github.io/lalrpop/

use crate::ast::*;
use crate::parse::{MyLexer, LexicalError, Pos};
use crate::tokenize::Token;

grammar<'b>;

pub Root: ARoot = {
    () => ARoot,
    <decl:Decl> <r:Root> => {
        r
    }
};

pub Decl: ADecl = {
    <term:Term> => {
        eprintln!("{:?}", term);
        ADecl
    },
};

pub Term: Token = {
    <n:Num> => n,
    "(" <t:Term> ")" "eos" => t,
};

Num: Token = "num";

extern {
    type Location = Pos;
    type Error = LexicalError;

    enum Token {
        "eos" => Token::Eos,
        "num" => Token::DecimalInt,
        "(" => Token::LeftParen,
        ")" => Token::RightParen,
    }
}
