fix fn assert_eq(in actual: int, in expected: int) -> int {
  let mut result: int = extern_assert_eq(
    move actual
    move expected
  ))
  return(move result)
}

fix fn print(in s: string) -> int {
  let mut result_2: int = extern_print(move s))
  return(move result_2)
}

fix fn main() -> int {
  let mut result_6: bool = prim_eq(
    in 0
    in 0
  ))
  fix label if_body() -> never {
    let mut result_4: int = extern_print(in "0 == 0\n"))
    if_next(move result_4)
  }

  and label if_alt() -> never {
    let mut result_5: int = extern_print(in "0 != 0\n"))
    if_next(move result_5)
  }

  and label if_next(mut result_3: int) -> never {
    let mut result_10: bool = prim_eq(
      in 0
      in 1
    ))
    fix label if_body_2() -> never {
      let mut result_8: int = extern_print(in "0 == 1\n"))
      if_next_2(move result_8)
    }

    and label if_alt_2() -> never {
      let mut result_9: int = extern_print(in "0 != 1\n"))
      if_next_2(move result_9)
    }

    and label if_next_2(mut result_7: int) -> never {
      let val x: int = prim_id(in 2))
      let mut result_17: bool = prim_eq(
        in x
        in 1
      ))
      fix label if_body_3() -> never {
        let mut result_12: int = extern_print(in "0 == 1\n"))
        if_next_3(move result_12)
      }

      and label if_alt_3() -> never {
        let mut result_16: bool = prim_eq(
          in x
          in 2
        ))
        fix label if_body_4() -> never {
          let mut result_14: int = extern_print(in "x == 2\n"))
          if_next_4(move result_14)
        }

        and label if_alt_4() -> never {
          let mut result_15: int = extern_print(in "x != 1, x != 2\n"))
          if_next_4(move result_15)
        }

        and label if_next_4(mut result_13: int) -> never {
          if_next_3(move result_13)
        }

        if result_16 {
          if_body_4()
        } else {
          if_alt_4()
        }
      }

      and label if_next_3(mut result_11: int) -> never {
        return(move result_11)
      }

      if result_17 {
        if_body_3()
      } else {
        if_alt_3()
      }
    }

    if result_10 {
      if_body_2()
    } else {
      if_alt_2()
    }
  }

  if result_6 {
    if_body()
  } else {
    if_alt()
  }
}

__noop
