fix fn print(in s: string) -> () {
  jump return(extern_print(in s))
}

fix fn string_clone(in s_2: string) -> string {
  jump return(extern_string_clone(in s_2))
}

fix fn main() -> () {
  fix label next(mut result: string) -> never {
    fix label next_2(mut result_2: string) -> never {
      fix label let_next(val s_3: 's_3) -> never {
        fix label next_3(mut result_3: ()) -> never {
          jump return(prim_jump(move result_3))
        }

        jump next_3(print(in s))
      }

      jump let_next(prim_jump(move result_2))
    }

    jump next_2(string_clone(in result))
  }

  jump next("hello")
}

__noop
